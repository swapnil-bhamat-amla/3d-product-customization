{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/connector.service.ts","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/image/image.component.ts","webpack:///src/app/image/image.component.html","webpack:///src/app/options/options.component.ts","webpack:///src/app/options/options.component.html","webpack:///src/app/preview/preview.component.ts","webpack:///src/app/preview/preview.component.html","webpack:///src/app/product-details/product-details.component.ts","webpack:///src/app/product-details/product-details.component.html","webpack:///src/app/text-box/text-box.component.ts","webpack:///src/app/text-box/text-box.component.html","webpack:///src/app/type.ts","webpack:///src/app/views/views.component.ts","webpack:///src/app/views/views.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","ConnectorService","propUpdated","action","emit","length","result","characters","charactersLength","i","charAt","Math","floor","random","providedIn","FooterComponent","HeaderComponent","ImageComponent","service","selectedClipArt","clipArtsArr","objectsArr","selectedObjectId","clipArtBasePath","imageProps","type","src","widget_key","makeId","left","top","width","height","path","objectName","window","prompt","trim","objectId","push","value","sendObjectDetails","updatedProp","Image","data","props","emitUpdatedEvent","addObject","OptionsComponent","selectedSKU","products","sku","name","hex","sendSKUDetails","Options","PreviewComponent","imageLoading","getImageAPIDomain","imageFormat","viewCode","webAPIClientKey","websiteId","maxWidth","maxHeight","widgetCollection","updatePreviewImage","subscribe","handleAction","TextBox","Views","console","log","unsubscribe","url","callback","image","addEventListener","getUpdateProductUrl","loadImage","productUrl","widgetArr","generateWidgetArr","encodeURIComponent","JSON","stringify","key","ProductDetailsComponent","TextBoxComponent","textProps","fill","text","fontSize","fontWeight","Normal","fontStyle","fontFamily","fontFamilyArr","Italic","Bold","ActionType","FontWeightType","FontStyleType","ViewsComponent","views","selectedViewCode","sendViewDetails","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {}\n","<div class=\"container-fluid p-0\">\r\n  <app-header></app-header>\r\n</div>\r\n<div class=\"container p-2 pt-5\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-7\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <h4>Preview</h4>\r\n          <app-preview></app-preview>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <app-views></app-views>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-5\">\r\n      <div class=\"row mb-2\">\r\n        <div class=\"col-md-12\">\r\n          <app-product-details></app-product-details>\r\n        </div>\r\n      </div>\r\n      <div class=\"row mb-2\">\r\n        <div class=\"col-md-12\">\r\n          <app-options></app-options>\r\n        </div>\r\n      </div>\r\n      <div class=\"row mb-2\">\r\n        <div class=\"col-md-12\">\r\n          <app-image></app-image>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <app-text-box></app-text-box>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ColorPickerModule } from 'ngx-color-picker';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { PreviewComponent } from './preview/preview.component';\r\nimport { TextBoxComponent } from './text-box/text-box.component';\r\nimport { ImageComponent } from './image/image.component';\r\nimport { OptionsComponent } from './options/options.component';\r\nimport { ViewsComponent } from './views/views.component';\r\nimport { ConnectorService } from './connector.service';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { ProductDetailsComponent } from './product-details/product-details.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PreviewComponent,\r\n    TextBoxComponent,\r\n    ImageComponent,\r\n    OptionsComponent,\r\n    ViewsComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    ProductDetailsComponent,\r\n  ],\r\n  imports: [BrowserModule, FormsModule, ColorPickerModule],\r\n  providers: [ConnectorService],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { IAction } from './type';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ConnectorService {\r\n  propUpdated = new EventEmitter<IAction>();\r\n  constructor() {}\r\n\r\n  emitUpdatedEvent(action: IAction) {\r\n    this.propUpdated.emit(action);\r\n  }\r\n\r\n  makeId(length: number): string {\r\n    var result = '';\r\n    var characters =\r\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for (var i = 0; i < length; i++) {\r\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer>\r\n    <div class=\"container pt-5 pb-5\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <h3 class=\"support-text\">CUSTOMER SUPPORT</h3>\r\n                <p class=\"contact-info\">If you have any questions<br><a href=\"mailto:admin@znode.com\" data-test-selector=\"linkMailTo\">\r\n                    email\r\n                  </a>us or give us a call.</p>\r\n                  <h3 class=\"support-text\">\r\n                    +1-855-927-8434\r\n                  </h3>\r\n            </div>\r\n            <div class=\"col-md-6 pt-2\">\r\n                <img src=\"http://react.artifi.net/assets/images/logo.png\" alt=\"Maxwell's Promotions\" class=\"footer-logo\">\r\n            </div>\r\n        </div>\r\n        \r\n    </div>\r\n</footer>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n    <a class=\"navbar-brand\" href=\"#\">\r\n        <img alt=\"Maxwell's Promotions\" class=\"img-logo\" src=\"http://react.artifi.net/assets/images/7758e93c-21c1-4828-98ce-ab219d18c4a1maxwell-logo.png\">\r\n    </a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor02\" aria-controls=\"navbarColor02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarColor02\">\r\n    <form class=\"form-inline mr-auto\">\r\n        <input class=\"form-control mr-sm-4\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\r\n    </form>\r\n      <ul class=\"navbar-nav align-item-center\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"#\">Scan</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"#\">Quick Order</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"#\">\r\n            <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">CART | 0 ITEMS</button>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n     \r\n    </div>\r\n  </nav>\r\n<!-- As a heading -->\r\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n<span class=\"navbar-brand mb-0 h1 ml-4 fs-16\">SHOP DEPARTMENTS</span>\r\n</nav>\r\n<nav class=\"navbar navbar-expand-lg navbar-custom\">\r\n    <span class=\"navbar-brand mb-0 ml-4\">Apparel & Soft Goods/ Short Sleeve Everyday Tee\r\n    </span>\r\n</nav>","import { Component, OnInit } from '@angular/core';\r\nimport { IImage, IObject, ActionType, IAction } from '../type';\r\nimport { ConnectorService } from '../connector.service';\r\n\r\ninterface IClipArt {\r\n  path: string;\r\n  code: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-image',\r\n  templateUrl: './image.component.html',\r\n  styleUrls: ['./image.component.css'],\r\n})\r\nexport class ImageComponent implements OnInit {\r\n  selectedClipArt = '97963';\r\n  clipArtsArr: IClipArt[] = [];\r\n  objectsArr: IObject[] = [];\r\n  imageProps: IImage;\r\n  selectedObjectId = '';\r\n  clipArtBasePath =\r\n    'http://cdnintegrationimages.azureedge.net/UserImages/137708DD-8198-4922-B167-0C90CA79F57F/4d840c81-6b06-4eb0-a11b-9f146f739888/Cliparts/Thumbnail';\r\n\r\n  constructor(private service: ConnectorService) {\r\n    this.imageProps = {\r\n      type: 'image',\r\n      src: this.selectedClipArt,\r\n      widget_key: this.service.makeId(5),\r\n      left: 300,\r\n      top: 300,\r\n      width: 300,\r\n      height: 300,\r\n    };\r\n    this.clipArtsArr = [\r\n      {\r\n        path: `${this.clipArtBasePath}/24cda29d-50e5-404b-8057-3bfb72b0229f.png`,\r\n        code: '97963',\r\n      },\r\n      {\r\n        path: `${this.clipArtBasePath}/c8dbecaf-45c6-47fc-8c3b-dead82e50655.jpg`,\r\n        code: '97966',\r\n      },\r\n      {\r\n        path: `${this.clipArtBasePath}/edc94698-12f2-41b3-99c4-9a8558ffde8e.png`,\r\n        code: '101098',\r\n      },\r\n      {\r\n        path: `${this.clipArtBasePath}/af0fbfa7-540f-44b8-b0f8-97cf7971f8b3.png`,\r\n        code: '97962',\r\n      },\r\n      {\r\n        path: `${this.clipArtBasePath}/ed39c603-1381-4e6e-8d3c-3138cbc64bbb.png`,\r\n        code: '97965',\r\n      },\r\n    ];\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  addObject() {\r\n    let objectName = window.prompt('Please enter image name', '');\r\n    if (objectName && objectName.trim()) {\r\n      let objectId = this.service.makeId(5);\r\n      this.selectedObjectId = objectId;\r\n      this.imageProps.widget_key = objectId;\r\n      this.objectsArr.push({\r\n        id: objectId,\r\n        value: objectName,\r\n      });\r\n      this.sendObjectDetails();\r\n    }\r\n  }\r\n\r\n  clipArtSelectedHnd(code: string) {\r\n    this.selectedClipArt = code;\r\n    this.imageProps.src = code;\r\n    this.sendObjectDetails();\r\n  }\r\n\r\n  sendObjectDetails() {\r\n    let updatedProp: IAction = {\r\n      type: ActionType.Image,\r\n      data: {\r\n        id: this.selectedObjectId,\r\n        props: this.imageProps,\r\n      },\r\n    };\r\n    this.service.emitUpdatedEvent(updatedProp);\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-header\">\r\n    Change logo\r\n    <div class=\"float-right\">\r\n      <div class=\"input-group mb-2\">\r\n        <select\r\n          [(ngModel)]=\"selectedObjectId\"\r\n          *ngIf=\"objectsArr.length !== 0\"\r\n          class=\"custom-select custom-select-sm\"\r\n        >\r\n          <option *ngFor=\"let object of objectsArr\" [value]=\"object.id\">{{\r\n            object.value\r\n          }}</option>\r\n        </select>\r\n        <div class=\"input-group-append\">\r\n          <button class=\"btn btn-primary btn-sm\" (click)=\"addObject()\">\r\n            Add\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body max-height p-3\">\r\n    <div\r\n      *ngIf=\"objectsArr.length === 0\"\r\n      class=\"alert alert-warning\"\r\n      role=\"alert\"\r\n    >\r\n      Please add any object from above!\r\n    </div>\r\n    <ul *ngIf=\"objectsArr.length !== 0\" class=\"gallery text-center\">\r\n      <li\r\n        *ngFor=\"let clipArt of clipArtsArr\"\r\n        (click)=\"clipArtSelectedHnd(clipArt.code)\"\r\n        [ngClass]=\"{ selected: selectedClipArt === clipArt.code }\"\r\n      >\r\n        <a href=\"#\" class=\"thumbnail\"\r\n          ><img\r\n            class=\"img-responsive\"\r\n            [src]=\"clipArt.path\"\r\n            [alt]=\"clipArt.code\"\r\n        /></a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { IAction, ActionType } from '../type';\r\nimport { ConnectorService } from '../connector.service';\r\n\r\ninterface IProduct {\r\n  sku: string;\r\n  name: string;\r\n  hex: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-options',\r\n  templateUrl: './options.component.html',\r\n  styleUrls: ['./options.component.css'],\r\n})\r\nexport class OptionsComponent implements OnInit {\r\n  selectedSKU = '#fff';\r\n  products: IProduct[] = [];\r\n  constructor(private service: ConnectorService) {\r\n    this.products = [\r\n      {\r\n        sku: 'Product_V_Black',\r\n        name: 'Black',\r\n        hex: '#000000',\r\n      },\r\n      {\r\n        sku: 'Product_V_Blue',\r\n        name: 'Blue',\r\n        hex: '#0000ff',\r\n      },\r\n      {\r\n        sku: 'Product_V_Red',\r\n        name: 'Red',\r\n        hex: '#ff0000',\r\n      },\r\n    ];\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  colorChangedHnd(sku: string) {\r\n    this.selectedSKU = sku;\r\n    this.sendSKUDetails(sku);\r\n  }\r\n\r\n  sendSKUDetails(sku: string) {\r\n    let updatedProp: IAction = {\r\n      type: ActionType.Options,\r\n      data: {\r\n        sku: sku,\r\n      },\r\n    };\r\n    this.service.emitUpdatedEvent(updatedProp);\r\n  }\r\n}\r\n","<div class=\"card\">\n  <div class=\"card-header\">T-shirt color</div>\n  <div class=\"card-body pt-2 pb-2\">\n    <ul class=\"swatches\">\n      <li *ngFor=\"let product of products\">\n        <div\n          [title]=\"product.name\"\n          class=\"swatch swatch-clickable\"\n          [ngClass]=\"{ selected: selectedSKU === product.sku }\"\n          [style.background-color]=\"product.hex\"\n          (click)=\"colorChangedHnd(product.sku)\"\n        ></div>\n      </li>\n    </ul>\n  </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ConnectorService } from '../connector.service';\r\nimport { IAction, ITextProp, ActionType, IImage } from '../type';\r\n\r\n@Component({\r\n  selector: 'app-preview',\r\n  templateUrl: './preview.component.html',\r\n  styleUrls: ['./preview.component.css'],\r\n})\r\nexport class PreviewComponent implements OnInit, OnDestroy {\r\n  productUrl: string;\r\n  imageLoading = false;\r\n  getImageAPIDomain =\r\n    'http://integrationdevimagelab.artifi.net/Designer/Image/GetImage';\r\n  imageFormat = 'png';\r\n  sku = 'Product_V_Black';\r\n  viewCode = 'Front';\r\n  webAPIClientKey = '185365d1-5cb0-4a9e-98bd-a9ce0b34cedc';\r\n  websiteId = '423';\r\n  maxWidth = 500;\r\n  maxHeight = 500;\r\n  widgetCollection: { [key: string]: ITextProp | IImage } = {};\r\n\r\n  constructor(private service: ConnectorService) {}\r\n\r\n  ngOnInit() {\r\n    this.updatePreviewImage();\r\n    this.service.propUpdated.subscribe((action: IAction) =>\r\n      this.handleAction(action)\r\n    );\r\n  }\r\n\r\n  //TODO: Remove any\r\n  handleAction(action: any) {\r\n    switch (action.type) {\r\n      case ActionType.TextBox: {\r\n        this.widgetCollection[action.data.id] = action.data.props;\r\n        this.updatePreviewImage();\r\n        break;\r\n      }\r\n      case ActionType.Image: {\r\n        this.widgetCollection[action.data.id] = action.data.props;\r\n        this.updatePreviewImage();\r\n        break;\r\n      }\r\n      case ActionType.Options: {\r\n        this.sku = action.data.sku;\r\n        this.updatePreviewImage();\r\n        break;\r\n      }\r\n      case ActionType.Views: {\r\n        this.viewCode = action.data.code;\r\n        console.log(action.data.code);\r\n        this.updatePreviewImage();\r\n        break;\r\n      }\r\n      default: {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.service.propUpdated.unsubscribe();\r\n  }\r\n\r\n  loadImage(url: string, callback: Function) {\r\n    const image = new Image();\r\n    image.addEventListener('load', () => {\r\n      callback(url);\r\n    });\r\n    image.src = url;\r\n  }\r\n\r\n  private updatePreviewImage() {\r\n    const url = this.getUpdateProductUrl();\r\n    this.imageLoading = true;\r\n    this.loadImage(url, (image) => {\r\n      this.productUrl = image;\r\n      this.imageLoading = false;\r\n    });\r\n  }\r\n\r\n  private getUpdateProductUrl(): string {\r\n    let widgetArr = this.generateWidgetArr();\r\n    let url = `${this.getImageAPIDomain}?format=${\r\n      this.imageFormat\r\n    }&webApiClientKey=${this.webAPIClientKey}&websiteId=${this.websiteId}&sku=${\r\n      this.sku\r\n    }&ViewCode=${this.viewCode}&height=${this.maxWidth}&width=${\r\n      this.maxHeight\r\n    }&parameters=${encodeURIComponent(JSON.stringify(widgetArr))}`;\r\n    return url;\r\n  }\r\n\r\n  generateWidgetArr(): Array<ITextProp> {\r\n    let widgetArr = [];\r\n    for (let key in this.widgetCollection) {\r\n      widgetArr.push(this.widgetCollection[key]);\r\n    }\r\n    return widgetArr;\r\n  }\r\n}\r\n","<a class=\"thumbnail\" href=\"#\">\r\n  <img class=\"img-responsive\" src=\"{{ productUrl }}\" alt=\"image\" />\r\n  <img\r\n    *ngIf=\"imageLoading\"\r\n    class=\"img-responsive jumbo\"\r\n    src=\"../../assets/img/spinner.gif\"\r\n    alt=\"\"\r\n  />\r\n</a>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-product-details',\r\n  templateUrl: './product-details.component.html',\r\n  styleUrls: ['./product-details.component.css']\r\n})\r\nexport class ProductDetailsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p class=\"product-name\">Short Sleeve Everyday Tee</p>\r\n<div class=\"mb-2 font-color-gray\">\r\n<span><b>SKU:</b></span>\r\nT483020-361-RG-M5TO6\r\n</div>\r\n<p class=\"font-color-gray\">\r\n    This No Boundaries short sleeve t-shirt is soft and\r\n    comfortable. It is great for layering or wearing on a\r\n    casual day.\r\n</p>\r\n<h3  class=\"mb-3 price\">$24.95</h3>","import { Component, OnInit } from '@angular/core';\r\nimport { ConnectorService } from '../connector.service';\r\nimport {\r\n  ITextProp,\r\n  IAction,\r\n  ActionType,\r\n  FontWeightType,\r\n  FontStyleType,\r\n  IObject,\r\n} from '../type';\r\n\r\ninterface IFontFamily {\r\n  code: string;\r\n  value: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-text-box',\r\n  templateUrl: './text-box.component.html',\r\n  styleUrls: ['./text-box.component.css'],\r\n})\r\nexport class TextBoxComponent implements OnInit {\r\n  textProps: ITextProp;\r\n  fontFamilyArr: IFontFamily[];\r\n  objectsArr: IObject[] = [];\r\n  selectedObjectId = '';\r\n\r\n  constructor(private service: ConnectorService) {\r\n    this.textProps = {\r\n      fill: '#ff0000',\r\n      text: 'sample text',\r\n      type: 'textbox',\r\n      fontSize: 20,\r\n      fontWeight: FontWeightType.Normal,\r\n      fontStyle: FontStyleType.Normal,\r\n      fontFamily: 'Ubuntu',\r\n      widget_key: this.selectedObjectId,\r\n      left: 200,\r\n      top: 200,\r\n      width: 300,\r\n      height: 150,\r\n    };\r\n\r\n    this.fontFamilyArr = [\r\n      {\r\n        code: 'Ubuntu',\r\n        value: 'Ubuntu',\r\n      },\r\n      {\r\n        code: 'TimesNewRoman',\r\n        value: 'Times New Roman',\r\n      },\r\n      {\r\n        code: 'Philosopher',\r\n        value: 'Philosopher',\r\n      },\r\n      {\r\n        code: 'LetterGothic',\r\n        value: 'Letter Gothic',\r\n      },\r\n      {\r\n        code: 'Arial',\r\n        value: 'Arial',\r\n      },\r\n      {\r\n        code: 'Cochin',\r\n        value: 'Cochin',\r\n      },\r\n    ];\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  addObject() {\r\n    let objectName = window.prompt('Please enter text name', '');\r\n    if (objectName && objectName.trim()) {\r\n      let objectId = this.service.makeId(5);\r\n      this.selectedObjectId = objectId;\r\n      this.textProps.widget_key = objectId;\r\n      this.objectsArr.push({\r\n        id: objectId,\r\n        value: objectName,\r\n      });\r\n      this.sendObjectDetails();\r\n    }\r\n  }\r\n\r\n  setText() {\r\n    this.sendObjectDetails();\r\n  }\r\n\r\n  setFontSize() {\r\n    this.sendObjectDetails();\r\n  }\r\n\r\n  setFontStyle() {\r\n    this.textProps.fontStyle =\r\n      this.textProps.fontStyle === FontStyleType.Normal\r\n        ? FontStyleType.Italic\r\n        : FontStyleType.Normal;\r\n    this.sendObjectDetails();\r\n  }\r\n\r\n  setBold() {\r\n    this.textProps.fontWeight =\r\n      this.textProps.fontWeight === FontWeightType.Normal\r\n        ? FontWeightType.Bold\r\n        : FontWeightType.Normal;\r\n    this.sendObjectDetails();\r\n  }\r\n\r\n  isBold() {\r\n    return this.textProps.fontWeight === FontWeightType.Bold ? true : false;\r\n  }\r\n\r\n  isItalic() {\r\n    return this.textProps.fontStyle === FontStyleType.Italic ? true : false;\r\n  }\r\n\r\n  setFontFamily() {\r\n    this.sendObjectDetails();\r\n  }\r\n\r\n  setFill() {\r\n    this.sendObjectDetails();\r\n  }\r\n\r\n  sendObjectDetails() {\r\n    let updatedProp: IAction = {\r\n      type: ActionType.TextBox,\r\n      data: {\r\n        id: this.selectedObjectId,\r\n        props: this.textProps,\r\n      },\r\n    };\r\n    this.service.emitUpdatedEvent(updatedProp);\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-header\">\r\n    Change text\r\n    <div class=\"float-right\">\r\n      <div class=\"input-group\">\r\n        <select\r\n          [(ngModel)]=\"selectedObjectId\"\r\n          *ngIf=\"objectsArr.length !== 0\"\r\n          class=\"mr-2 form-control-sm select-width\"\r\n        >\r\n          <option *ngFor=\"let object of objectsArr\" [value]=\"object.id\">{{\r\n            object.value\r\n          }}</option>\r\n        </select>\r\n        <div>\r\n          <button class=\"btn btn-primary btn-sm\" (click)=\"addObject()\">\r\n            Add\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"card-body pt-2 pb-2\">\r\n    <div\r\n      *ngIf=\"objectsArr.length === 0\"\r\n      class=\"alert alert-warning\"\r\n      role=\"alert\"\r\n    >\r\n      Please add any object from above!\r\n    </div>\r\n    <div *ngIf=\"objectsArr.length !== 0\" class=\"custom-item\">\r\n      <div class=\"custom-item-title\">Text:</div>\r\n      <div class=\"custom-item-body\">\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          (input)=\"setText()\"\r\n          [(ngModel)]=\"textProps.text\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"objectsArr.length !== 0\" class=\"custom-item\">\r\n      <div class=\"custom-item-title\">Styling:</div>\r\n      <div class=\"custom-item-body\">\r\n        <div class=\"form-row\">\r\n          <div class=\"col-6\">\r\n            <select\r\n              [(ngModel)]=\"textProps.fontFamily\"\r\n              class=\"form-control\"\r\n              (change)=\"setFontFamily()\"\r\n            >\r\n              <option\r\n                *ngFor=\"let fontFamily of fontFamilyArr\"\r\n                [value]=\"fontFamily.code\"\r\n                >{{ fontFamily.value }}</option\r\n              >\r\n            </select>\r\n          </div>\r\n          <div class=\"col-3 text-center\">\r\n            <div class=\"btn-group\" role=\"group\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-primary\"\r\n                [ngClass]=\"{\r\n                  active: isBold()\r\n                }\"\r\n                (click)=\"setBold()\"\r\n              >\r\n                <i class=\"fa fa-bold\"></i>\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-primary\"\r\n                [ngClass]=\"{ active: isItalic() }\"\r\n                (click)=\"setFontStyle()\"\r\n              >\r\n                <i class=\"fa fa-italic\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              [cpPosition]=\"'top'\"\r\n              [(colorPicker)]=\"textProps.fill\"\r\n              [style.background]=\"textProps.fill\"\r\n              [value]=\"textProps.fill\"\r\n              (cpSliderDragEnd)=\"setFill()\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row mt-1\">\r\n          <label for=\"fontSize\" class=\"col-4 col-form-label custom-item-title\"\r\n            >Text size: ({{ textProps.fontSize }})</label\r\n          >\r\n          <div class=\"col-8 pl-0 mt-2 text-center\">\r\n            <input\r\n              type=\"range\"\r\n              id=\"fontSize\"\r\n              [(ngModel)]=\"textProps.fontSize\"\r\n              class=\"slider\"\r\n              (mouseup)=\"setFontSize()\"\r\n              step=\"1\"\r\n              min=\"10\"\r\n              max=\"120\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","export interface IAction {\r\n  type: ActionType;\r\n  data: IObjectAction | IAttribute | IView;\r\n}\r\n\r\nexport enum ActionType {\r\n  TextBox = 'TEXT-BOX',\r\n  Image = 'IMAGE',\r\n  Options = 'OPTIONS',\r\n  Views = ' VIEWS',\r\n}\r\n\r\ninterface IAttribute {\r\n  sku: string;\r\n}\r\n\r\ninterface IView {\r\n  code: string;\r\n}\r\n\r\ninterface IObjectAction {\r\n  id: string;\r\n  props: ITextProp | IImage;\r\n}\r\n\r\nexport enum FontWeightType {\r\n  Normal = 'normal',\r\n  Bold = 'bold',\r\n}\r\n\r\nexport enum FontStyleType {\r\n  Normal = 'normal',\r\n  Italic = 'italic',\r\n}\r\n\r\nexport interface IObject {\r\n  id: string;\r\n  value: string;\r\n}\r\n\r\nexport interface ITextProp {\r\n  type: 'textbox';\r\n  fill: string;\r\n  text: string;\r\n  fontSize: number;\r\n  fontWeight: FontWeightType;\r\n  fontStyle: FontStyleType;\r\n  fontFamily: string;\r\n  left: number;\r\n  top: number;\r\n  width: number;\r\n  height: number;\r\n  widget_key: string;\r\n}\r\n\r\nexport interface IImage {\r\n  type: 'image';\r\n  src: string;\r\n  widget_key: string;\r\n  left: number;\r\n  top: number;\r\n  width: number;\r\n  height: number;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActionType, IAction } from '../type';\r\nimport { ConnectorService } from '../connector.service';\r\n\r\ninterface IView {\r\n  name: string;\r\n  code: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-views',\r\n  templateUrl: './views.component.html',\r\n  styleUrls: ['./views.component.css'],\r\n})\r\nexport class ViewsComponent implements OnInit {\r\n  views: IView[] = [];\r\n  selectedViewCode = 'Front';\r\n  constructor(private service: ConnectorService) {\r\n    this.views = [\r\n      {\r\n        name: 'Front Side',\r\n        code: 'Front',\r\n      },\r\n      {\r\n        name: 'Back Side',\r\n        code: 'Back',\r\n      },\r\n    ];\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  changeView(code: string) {\r\n    this.selectedViewCode = code;\r\n    this.sendViewDetails(code);\r\n  }\r\n\r\n  sendViewDetails(code: string) {\r\n    let updatedProp: IAction = {\r\n      type: ActionType.Views,\r\n      data: {\r\n        code: code,\r\n      },\r\n    };\r\n    this.service.emitUpdatedEvent(updatedProp);\r\n  }\r\n}\r\n","<div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\r\n  <label\r\n    *ngFor=\"let view of views\"\r\n    class=\"btn btn-primary\"\r\n    [ngClass]=\"{ active: view.code === selectedViewCode }\"\r\n    (click)=\"changeView(view.code)\"\r\n  >\r\n    <input\r\n      type=\"radio\"\r\n      name=\"options\"\r\n      [id]=\"view.code\"\r\n      autocomplete=\"off\"\r\n      [checked]=\"view.code === selectedViewCode\"\r\n    />\r\n    {{ view.name }}\r\n  </label>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}